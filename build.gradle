import com.widen.plugins.buildkite.BuildkitePlugin

plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.11.0'
    id 'com.widen.versioning' version '0.4.1'
}

apply plugin: BuildkitePlugin

group = 'com.widen'

dependencies {
    compile gradleApi()
    compile localGroovy()
}

jar {
    from "${rootProject.rootDir}/buildSrc/build/classes/groovy/main"
    from("${rootProject.rootDir}/buildSrc/src/main/groovy") {
        include '**/*.gdsl'
    }
}

System.setProperty("gradle.publish.key", System.getenv("GRADLE_PUBLISH_KEY") ?: "")
System.setProperty("gradle.publish.secret", System.getenv("GRADLE_PUBLISH_SECRET") ?: "")

gradlePlugin {
    plugins {
        buildkitePlugin {
            id = 'com.widen.buildkite'
            implementationClass = BuildkitePlugin.name
        }
    }
}

pluginBundle {
    website = 'https://github.com/Widen/buildkite-gradle-plugin'
    vcsUrl = 'https://github.com/Widen/buildkite-gradle-plugin'
    description = 'A Gradle plugin that provides a DSL for dynamically generating Buildkite pipelines.'
    tags = ['buildkite']

    plugins {
        buildkitePlugin {
            id = 'com.widen.buildkite'
            displayName = 'Widen Buildkite Gradle plugin'
        }
    }
}

// This serves as a live example of how to use the plugin.
buildkite {
    // Configure the "default" pipeline.
    pipeline {
        replace = true

        // Add a command step that invokes another Gradle task.
        commandStep {
            // Most methods mirror the names used in a Buildkite YAML file.
            label ':junit: Unit tests'
            artifactPath 'src/build/reports/integTest/**/*'

            // Specify which Buildkite agents should pick up this work.
            agentQueue 'builder'

            // Environment variables can be set in multiple ways.
            environment 'FOO', 'a'
            environment BAR: 42, BAZ: 43
            environment {
                HELLO = 'world'
            }

            plugin 'Widen/gradle#v1', {
                tasks 'check'
                systemProperties "com.widen.plugins.buildkite.foo": "bar"
                foo = [
                    {
                        bar = 2
                    }
                ]
            }
        }

        commandStep {
            label ':boom: Soft fail step'
            command 'soft-fail.sh'
            softFail()
        }

        waitStep()

        commandStep {
            label ':gradle: Publish plugin'
            branches '*.*.*'

            // Custom plugins can also be used by name.
            plugin 'Widen/gradle#v1', {
                tasks 'publishPlugins'
            }
        }

        // You can also set environment variables that apply to the whole pipeline.
        environment {
            FOO = 'bar'
        }
    }

    // You can also add additional pipelines with a name other than the default.
    pipeline 'secondary', {}

    // The default agent queue for steps that do not specify one is "builder", but this can be changed here.
    defaultAgentQueue 'builder'

    // You can also define pipelines in external script files inside your .buildkite directory matching the pattern 'buildkite*.gradle' and they will be
    // included automatically. This is true by default.
    includeScripts = true

    // There are also a few other things we can do besides define pipelines. Like set which versions of Buildkite
    // plugins we want to use by default.
    pluginVersion 'docker-compose', 'v3.0.3'
}
