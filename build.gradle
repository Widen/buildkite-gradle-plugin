import com.widen.plugins.buildkite.BuildkitePlugin

plugins {
    id 'com.widen.versioning' version '0.4.1'
    id 'groovy'
    id 'maven-publish'
    id 'java-gradle-plugin'
}

apply plugin: BuildkitePlugin

group = 'widen'

dependencies {
    compile gradleApi()
    compile localGroovy()
}

jar {
    from "${rootProject.rootDir}/buildSrc/build/classes/groovy/main"
}

gradlePlugin {
    plugins {
        buildkitePlugin {
            id = 'widen.buildkite'
            implementationClass = BuildkitePlugin.name
        }
    }
}

publishing {
    repositories {
        maven {
            url 'https://widen.jfrog.io/widen/libs-releases-local'
            credentials {
                username = System.env.JFROG_USER ?: USER
                password = System.env.JFROG_PASS ?: PASSWORD
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}

// This serves as a live example of how to use the plugin.
buildkite {
    // Configure the "default" pipeline.
    pipeline {
        replace = true

        // Add a command step that invokes another Gradle task.
        commandStep {
            // Most methods mirror the names used in a Buildkite YAML file.
            label ':junit: Unit tests'
            command './gradlew check --continue ${GRADLE_SWITCHES}'
            artifactPath 'src/build/reports/integTest/**/*'

            // Specify which Buildkite agents should pick up this work.
            agentQueue 'builder'

            // Environment variables can be set in multiple ways.
            environment 'FOO', 'a'
            environment BAR: 42, BAZ: 43
            environment {
                HELLO = 'world'
            }

            // Common Buildkite plugins are also part of the DSL.
            dockerCompose {
                run 'gradle'
            }
        }

        // Some step methods are just conveniences that generate a more complex step from simple configuration.
        publishDocsStep {
            appName = 'Gradle Buildkite Plugin'
        }

        waitStep()

        gradleStep {
            label ':maven: Publish JARs'
            task 'publish --continue'
            branches '*.*.*'
            // Gradle steps can set system properties.
            systemProperty 'app.foo', true
            // Note that many fields are optional.
        }

        // You can also set environment variables that apply to the whole pipeline.
        environment {
            FOO = 'bar'
        }
    }

    // You can also add additional pipelines with a name other than the default.
    pipeline 'secondary', {}

    // You can also define pipelines in external script files inside your .buildkite directory matching the pattern 'buildkite*.gradle' and they will be
    // included automatically. This is true by default.
    includeScripts = true

    // There are also a few other things we can do besides define pipelines. Like set which versions of Buildkite
    // plugins we want to use.
    pluginVersion 'docker-compose', 'v3.0.3'
}
